@startuml

autonumber

title 状态模式下的下载任务逻辑

actor 用户
control 状态管理器
entity 下载任务逻辑

用户 -> 状态管理器: 提交下载任务
状态管理器 -\ 下载任务逻辑: 获取一个下载任务逻辑实例

note left of 下载任务逻辑
    1. 可以返回一个基本的下载任务逻辑实例
    2. 可以返回一个支持一定范围内重新下载的下载任务逻辑实例
    3. ...
end note

下载任务逻辑 -/ 状态管理器: 返回一个下载任务逻辑实例

状态管理器 -> 开始下载: 开始下载

activate 开始下载

	group #dddddd 任务有效性检查
		开始下载 -> 开始下载: 任务有效性检查
		note right of 开始下载
			1. 参数检查,下载地址是否正确之类的
		end note
	else 任务无效
		开始下载 -> 下载失败: 任务无效,切换到下载失败
		activate 下载失败
	end

	|||
	group #dddddd 下载最终文件存在
        开始下载 -> 文件本来已经存在: 切换到文件本来已经存在状态
    end

	activate 文件本来已经存在
		group #dddddd 文件有效
			文件本来已经存在 -> 文件本来已经存在: 文件有效性检查
			文件本来已经存在 -->> 观察者管理器: 回调文件本来已经存在
            note right of 文件本来已经存在 #00ff00
                结束下载
            end note

            观察者管理器 -> 观察者管理器: 通知各个观察者最新的下载状态
		end

		group #dddddd 文件无效
			文件本来已经存在 -> 下载失败: 切换到下载失败状态
		end

	deactivate 文件本来已经存在


	|||
	group #dddddd 本地文件有效性检查
		开始下载 -> 开始下载: 本地文件有效性检查
		note right of 开始下载
			1. 检查文件是否存在,存在就直接进入下载成功的逻辑
			2. 文件存在,文件有效性检查,是否被篡改了如果是的话,就删除,重新下载,否则采用断点下载
			3. 文件不存在,需要重新下载
			4. 重新下载之前需要检查
				1. 可能存储目录的空间不足
				2. 权限问题
				3. 目标路径是文件之类的
				4. 实现文件目录系统功能
					1. 下载文件设置缓存时间,每次使用本目录之前先清除过期文件
					2. 下载目录设置体积大小,下载之前如果目录已经超过最大体积应该先清空一些数据
		end note

	else 下载缓存文件存在
		开始下载 -> 开始下载: 如果下载缓存文件被篡改过,重置文件,然后重新下载
	end


	|||
	group #dddddd 目录无效
		开始下载 -> 下载失败: 目录无效,切换到下载失败状态
	end

	|||
	group #dddddd 开始下载
		开始下载 -->> 观察者管理器: 回调开始下载
		观察者管理器 -> 观察者管理器: 通知各个观察者最新的下载状态
	end

	开始下载 -> 进行下载: 切换到下载中状态,执行其逻辑
deactivate 开始下载

activate 进行下载

	进行下载 -[#1111ff]> 进行下载: 调用下载任务逻辑实例进行下载

    ...每隔1秒钟(时间可以自定义),询问下载任务逻辑实例当前的下载状态...

	group #dddddd 下载中
		进行下载 -->> 观察者管理器: 通知文件当前下载进度
        观察者管理器 -> 观察者管理器: 通知各个观察者最新的下载状态
	end

	group #dddddd 下载完成
		进行下载 -> 下载完成: 切换到下载完成状态,执行其逻辑
	end

	group #dddddd 下载失败
		进行下载 -> 下载失败: 切换到下载失败状态,执行其逻辑
	end

    ...

	进行下载 -> 进行下载: 结束

deactivate 进行下载


activate 下载成功
	group #dddddd 下载文件有效性检查
		下载成功 -> 下载成功: 文件有效性检查
		note right of 下载成功
			1. 可以通过下载任务中传入进来的md5值进行匹配
			2. 可以通过请求服务器查询这个文件的md5之类进行检查
			3. ...
		end note
		下载成功 -->> 观察者管理器: 文件有效,下载成功
		note right of 下载成功 #00ff00
            结束下载
        end note
        观察者管理器 -> 观察者管理器: 通知各个观察者最新的下载状态
	else 文件无效
		下载成功 -> 下载失败: 切换到下载失败状态
	end

deactivate 下载成功

activate 下载失败

	group #dddddd 失败类型检查
		下载失败 -> 下载失败: 失败类型检查
		group #cccccc 可以重试的失败类型
			下载失败 -> 开始下载: 重新下载
		end

		group #cccccc 不可以重试的失败类型
			下载失败 -> 文件无效: 删除已有的最终下载本地文件
			下载失败 -> 下载失败: 异常上报
			下载失败 -->> 观察者管理器: 回调下载失败(任务无效)
            		deactivate 下载失败
            		观察者管理器 -> 观察者管理器: 通知各个观察者最新的下载状态
        end
	end

deactivate 下载失败


control 观察者管理器

legend center

优点

	1. 采用这种方式，一定程度上将代码解耦

endlegend

@enduml